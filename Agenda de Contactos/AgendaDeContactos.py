def Agenda():   
    # Inicializa un diccionario vac√≠o para almacenar los contactos.
    agenda = {}

    def addContact():
        # Esta funci√≥n agrega nuevos contactos a la agenda.
        while True:
            nombre = input("Ingrese el nombre del contacto: ").capitalize()
            # Solicita al usuario el nombre del contacto y lo capitaliza.
            if nombre == "":
                # Si el nombre est√° vac√≠o, termina el bucle.
                break
            telefono = input("Ingrese el n√∫mero de tel√©fono: ")
            # Solicita al usuario el n√∫mero de tel√©fono del contacto.
            agenda[nombre] = {
                "telefono": telefono
            }
            # A√±ade el contacto a la agenda con su n√∫mero de tel√©fono.
            print(f"\n‚úÖ Contacto '{nombre}' agregado exitosamente.\n")
            # Imprime un mensaje de confirmaci√≥n.

    def showContact():
        # Esta funci√≥n muestra la informaci√≥n de un contacto espec√≠fico.
        if agenda:
            # Verifica si la agenda no est√° vac√≠a.
            print("\nüìí AGENDA DE CONTACTOS:")
            # Muestra la lista de contactos.
            showAgenda()
            # Solicita al usuario seleccionar un √≠ndice de contacto.
            indice = int(input("\nSeleccione el √≠ndice del contacto que desea ver: ")) - 1
            # Convierte la entrada del usuario en un √≠ndice v√°lido (0 basado).
            if 0 <= indice < len(agenda):
                # Verifica si el √≠ndice est√° dentro del rango v√°lido.
                nombre = list(agenda.keys())[indice]
                # Obtiene el nombre del contacto basado en el √≠ndice.
                contacto = agenda[nombre]
                # Obtiene los detalles del contacto.
                print(f"\nüîé Informaci√≥n del Contacto:")
                print(f"Nombre: {nombre}")
                print(f"Tel√©fono: {contacto['telefono']}\n")
                # Muestra la informaci√≥n del contacto.
            else:
                print("\n‚ùå √çndice no v√°lido.\n")
                # Mensaje de error si el √≠ndice no es v√°lido.
        else:
            print("\n‚ö†Ô∏è La agenda est√° vac√≠a.\n")
            # Mensaje si la agenda est√° vac√≠a.

    def modifyContact():
        # Esta funci√≥n permite modificar un contacto existente.
        if agenda:
            print("\nüìí AGENDA DE CONTACTOS:")
            showAgenda()
            # Muestra la lista de contactos.
            indice = int(input("\nSeleccione el √≠ndice del contacto a modificar: ")) - 1
            # Solicita al usuario seleccionar un √≠ndice de contacto.
            if 0 <= indice < len(agenda):
                nombre = list(agenda.keys())[indice]
                # Obtiene el nombre del contacto basado en el √≠ndice.
                print(f"\n‚úèÔ∏è Modificando el contacto '{nombre}':")
                print("Ingrese los nuevos datos (deje en blanco para mantener el valor actual):")
                nuevo_telefono = input("Nuevo tel√©fono: ")
                # Solicita el nuevo n√∫mero de tel√©fono del contacto.
                
                if nuevo_telefono:
                    agenda[nombre]["telefono"] = nuevo_telefono
                    # Actualiza el n√∫mero de tel√©fono si se ingresa uno nuevo.
                print("\n‚úÖ Contacto modificado exitosamente.\n")
                # Imprime un mensaje de confirmaci√≥n.
            else:
                print("\n‚ùå √çndice no v√°lido.\n")
                # Mensaje de error si el √≠ndice no es v√°lido.
        else:
            print("\n‚ö†Ô∏è La agenda est√° vac√≠a.\n")
            # Mensaje si la agenda est√° vac√≠a.

    def deleteContact():
        # Esta funci√≥n elimina un contacto de la agenda.
        if agenda:
            print("\nüìí AGENDA DE CONTACTOS:")
            showAgenda()
            # Muestra la lista de contactos.
            indice = int(input("\nSeleccione el √≠ndice del contacto a eliminar: ")) - 1
            # Solicita al usuario seleccionar un √≠ndice de contacto.
            if 0 <= indice < len(agenda):
                nombre = list(agenda.keys())[indice]
                # Obtiene el nombre del contacto basado en el √≠ndice.
                del agenda[nombre]
                # Elimina el contacto de la agenda.
                print(f"\n‚úÖ Contacto '{nombre}' eliminado exitosamente.\n")
                # Imprime un mensaje de confirmaci√≥n.
            else:
                print("\n‚ùå √çndice no v√°lido.\n")
                # Mensaje de error si el √≠ndice no es v√°lido.
        else:
            print("\n‚ö†Ô∏è La agenda est√° vac√≠a.\n")
            # Mensaje si la agenda est√° vac√≠a.

    def showAgenda():
        # Esta funci√≥n muestra todos los contactos en la agenda.
        for i, (nombre, datos) in enumerate(agenda.items(), start=1):
            # Recorre los contactos en la agenda y muestra el √≠ndice, nombre y tel√©fono.
            print(f"{i}. {nombre} - Tel√©fono: {datos['telefono']}")
        print("-" * 30)
        # Imprime una l√≠nea separadora para mejorar la legibilidad.

    def searchContact():
        # Esta funci√≥n busca un contacto espec√≠fico por nombre.
        nombre = input("Ingrese el nombre del contacto que desea buscar: ").capitalize()
        # Solicita al usuario el nombre del contacto a buscar.
        if nombre in agenda:
            # Verifica si el nombre est√° en la agenda.
            print(f"\nüîé Informaci√≥n del Contacto:")
            print(f"Nombre: {nombre}")
            print(f"Tel√©fono: {agenda[nombre]['telefono']}\n")
            # Muestra la informaci√≥n del contacto si se encuentra.
        else:
            print("\n‚ùå El contacto no existe en la agenda.\n")
            # Mensaje de error si el contacto no se encuentra en la agenda.

    def mostrarMenu():
        # Esta funci√≥n muestra el men√∫ principal.
        print("\nüì± BIENVENIDO A SU AGENDA DE CONTACTOS üì±")
        print("1. Agregar contacto")
        print("2. Mostrar un contacto")
        print("3. Eliminar contacto")
        print("4. Buscar un contacto")
        print("5. Modificar contacto")
        print("6. Mostrar agenda completa")
        print("7. Salir")

    def menu():
        # Esta funci√≥n maneja la selecci√≥n de opciones del men√∫.
        opciones = {
            "1": addContact,
            "2": showContact,
            "3": deleteContact,
            "4": searchContact,
            "5": modifyContact,
            "6": showAgenda
        }
        while True:
            mostrarMenu()
            # Muestra el men√∫ principal.
            opcion = input("Seleccione una opci√≥n: ")
            # Solicita al usuario seleccionar una opci√≥n del men√∫.
            if opcion in opciones:
                opciones[opcion]()
                # Llama a la funci√≥n correspondiente seg√∫n la opci√≥n seleccionada.
            elif opcion == "7":
                print("\nüëã ¬°Hasta luego!\n")
                break
                # Sale del bucle y termina el programa si se selecciona la opci√≥n de salir.
            else:
                print("\n‚ùå Opci√≥n no v√°lida. Por favor, seleccione una opci√≥n del 1 al 7.\n")
                # Mensaje de error si la opci√≥n seleccionada no es v√°lida.

    menu()
    # Llama a la funci√≥n menu() para iniciar la aplicaci√≥n.

Agenda()
# Llama a la funci√≥n Agenda() para ejecutar el programa.
