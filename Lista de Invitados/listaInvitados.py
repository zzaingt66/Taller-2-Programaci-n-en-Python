
def invitadosApp():
    listaInvitados = []  # Se crea una lista vac√≠a para almacenar los nombres de los invitados.

    def agregarInvitado():
        # Funci√≥n para agregar invitados a la lista.
        while True:
            nombre = input("Ingrese el nombre del invitado (o presione Enter para terminar): ")
            if nombre == "":
                break  # Termina el bucle si el usuario presiona Enter sin ingresar un nombre.
            listaInvitados.append(nombre.capitalize())
            # Agrega el nombre con la primer letra en MAYUS a la lista y muestra un mensaje de confirmaci√≥n.

    def mostrarInvitados():
        # Funci√≥n para mostrar todos los invitados en la lista.
        if not listaInvitados:
            print("La lista de invitados est√° vac√≠a.")
        else:
            print("\nüìã Lista de invitados:")
            for i, invitado in enumerate(listaInvitados):
                print(f"{i}: {invitado}")  # Muestra el √≠ndice y el nombre de cada invitado.

    def mostrarUnInvitado():
        # Funci√≥n para mostrar un invitado espec√≠fico basado en el √≠ndice.
        mostrarInvitados()
        if listaInvitados:
            try:
                indice = int(input("Ingrese el √≠ndice del invitado que desea mostrar: "))
                if 0 <= indice < len(listaInvitados):
                    print(f"üë§ Invitado: {listaInvitados[indice]}")
                    # Muestra el nombre del invitado seleccionado si el √≠ndice es v√°lido.
                else:
                    print("‚ùå √çndice inv√°lido.")
            except ValueError:
                print("‚ùå Por favor, ingrese un n√∫mero v√°lido.")
                # Maneja el caso donde la entrada no es un n√∫mero.

    def eliminarInvitado():
        # Funci√≥n para eliminar un invitado de la lista basado en el √≠ndice.
        mostrarInvitados()
        if listaInvitados:
            try:
                indice = int(input("Ingrese el √≠ndice del invitado que desea eliminar: "))
                if 0 <= indice < len(listaInvitados):
                    eliminado = listaInvitados.pop(indice)
                    print(f"üóëÔ∏è {eliminado} ha sido eliminado de la lista.")
                    # Elimina el invitado de la lista y muestra un mensaje de confirmaci√≥n.
                else:
                    print("‚ùå √çndice inv√°lido.")
            except ValueError:
                print("‚ùå Por favor, ingrese un n√∫mero v√°lido.")
                # Maneja el caso donde la entrada no es un n√∫mero.

    def buscarInvitado():
        # Funci√≥n para buscar invitados en la lista por nombre.
        nombre = input("Ingrese el nombre del invitado a buscar: ").capitalize()
        resultados = [i for i, inv in enumerate(listaInvitados) if nombre.lower() in inv.lower()]
        # Busca coincidencias en la lista (sin distinguir entre may√∫sculas y min√∫sculas).
        if resultados:
            print(f"üîç Resultados de la b√∫squeda para '{nombre}':")
            for i in resultados:
                print(f"{i}: {listaInvitados[i]}")
                # Muestra los √≠ndices y nombres de los invitados que coinciden con la b√∫squeda.
        else:
            print(f"‚ùå No se encontraron invitados que coincidan con '{nombre}'.")

    def modificarInvitado():
        # Funci√≥n para modificar el nombre de un invitado en la lista.
        mostrarInvitados()
        if listaInvitados:
            try:
                indice = int(input("Ingrese el √≠ndice del invitado que desea modificar: "))
                if 0 <= indice < len(listaInvitados):
                    nuevoNombre = input("Ingrese el nuevo nombre del invitado: ").capitalize()
                    listaInvitados[indice] = nuevoNombre
                    print(f"‚úèÔ∏è El nombre ha sido actualizado a {nuevoNombre}.")
                    # Actualiza el nombre del invitado en la lista y muestra un mensaje de confirmaci√≥n.
                else:
                    print("‚ùå √çndice inv√°lido.")
            except ValueError:
                print("‚ùå Por favor, ingrese un n√∫mero v√°lido.")
                # Maneja el caso donde la entrada no es un n√∫mero.

    def mostrarMenu():
        # Funci√≥n para mostrar el men√∫ de opciones.
        print("\nüéâ BIENVENIDO A LA GESTI√ìN DE INVITADOS PARA LA FIESTA üéâ")
        print("1. Agregar invitado")
        print("2. Mostrar un invitado")
        print("3. Eliminar invitado")
        print("4. Buscar un invitado")
        print("5. Modificar invitado")
        print("6. Mostrar lista completa")
        print("7. Salir")

    def menu():
        # Funci√≥n para manejar la selecci√≥n de opciones del men√∫.
        # El diccionario asocicia cada opcion a las funciones correspondientes
        opciones = {
            "1": agregarInvitado,
            "2": mostrarUnInvitado,
            "3": eliminarInvitado,
            "4": buscarInvitado,
            "5": modificarInvitado,
            "6": mostrarInvitados
        }
        while True:
            mostrarMenu()
            opcion = input("Seleccione una opci√≥n: ")
            if opcion in opciones:
                opciones[opcion]()
                # Llamo correspondiente seg√∫n la opcion seleccionada
            elif opcion == "7":
                print("\nüëã ¬°Gracias por usar el programa!\n")
                break
                # Sale del bucle y termina el programa si se selecciona la opci√≥n de salir.
            else:
                print("\n‚ùå Opci√≥n no v√°lida. Por favor, seleccione una opci√≥n del 1 al 7.\n")
                # Mensaje de error si la opci√≥n seleccionada no es v√°lida.

    menu()

invitadosApp()
# Llama a la funci√≥n invitadosApp() para iniciar el programa.
